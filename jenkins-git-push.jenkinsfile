pipeline {
    agent {
        label 'docker-deploy'
    }

    environment {
      SONARQUBE = 'sonarqube'
      ARTIFACT_NAME = 'demo-1.0-SNAPSHOT.jar'
      DEPLOY_ENV = 'development'
      DOCKER_IMAGE = "colbyx20/brownbag-app:${params.RELEASE}"
      //PATH = "/home/jenkins/workspace/brownbag-kubernetes/brownbag/demo"
      GIT_BRANCH="dev"
    }

    stages {
        stage('Checkout'){
            steps{
                checkout scmGit(
                    branches: [[name: 'dev']],
                    userRemoteConfigs: [[credentialsId:  'GIT-CREDENTIALS',
                        url: 'git@github.com:colbyx20/brownbag.git']])
            }
        }

        stage('Clean'){
            steps{
                sh "mvn clean -f demo/pom.xml"
            }
        }

        stage('Test'){
            steps{
                sh "mvn test -f demo/pom.xml"
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    // Run SonarQube analysis
                    withCredentials([usernamePassword(credentialsId: 'sonar-user-pass', usernameVariable: 'SONAR_USERNAME', passwordVariable: 'SONAR_PASSWORD')]) {
                      sh "mvn sonar:sonar -f demo/pom.xml -Dsonar.host.url=http://sonarqube:9000 -Dsonar.login=${SONAR_USERNAME} -Dsonar.password=${SONAR_PASSWORD}"
                    }
                }
            }
        }

        stage('Package'){
            steps{
                sh "mvn package -f demo/pom.xml -DskipTests"
            }
        }

        stage('Build Image'){
          steps{
            script{
              dir('demo'){
                sh "docker build -t ${DOCKER_IMAGE} ."
              }
            }
          }
        }

        stage('Push Docker Image'){
          steps{
              script{
                  withCredentials([usernamePassword(credentialsId: 'DOCKER_LOGIN', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                      sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                      sh "docker push ${DOCKER_IMAGE}"
                  }
              }
          }
      } 

        stage('Modify and push'){
            steps{
                sh "echo 'text' >> testpush.txt "
                sh "git push origin HEAD:dev"
            }
        }
    }
}