pipeline {

     agent {
        label 'jenkins-docker'  // Specify the custom agent node (jenkins-docker)
    }

    environment {
        SONARQUBE = 'sonarqube'
        ARTIFACT_NAME = 'demo-1.0-SNAPSHOT.jar'
        DEPLOY_ENV = 'production'
        SONAR_TOKEN = 'sqa_401322c30adba780ed625702867c11294d4f9166'  // You may want to replace this with Jenkins credentials
    }

    stages {
        stage('Checkout') {
            steps {
                // Pull the code from Git repository
                git branch: 'main', url: 'https://github.com/colbyx20/brownbag.git'
            }
        }

        stage('Clean') {
            steps {
                script {
                  // Clean the previous build artifacts
                  sh 'mvn clean -f demo/pom.xml'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    // Run the unit tests (including JaCoCo code coverage)
                    sh 'mvn test -f demo/pom.xml'
                }
            }
        }

        // stage('SonarQube Analysis') {
        //     steps {
        //         script {
        //             // Run SonarQube analysis
        //             sh "mvn sonar:sonar -f demo/pom.xml -Dsonar.host.url=http://sonarqube:9000 -Dsonar.login=sqa_401322c30adba780ed625702867c11294d4f9166"
        //         }
        //     }
        // }

        stage('Package') {
            steps {
                script {
                    // Package the application into a JAR file
                    sh 'mvn package -f demo/pom.xml -DskipTests'
                }
            }
        }

        stage('Build Artifact') {
            steps {
                script {
                    // Verify the artifact is created
                    sh 'ls -l demo/target/*.jar'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    dir('/home/jenkins/workspace/brownbag/demo'){
                        sh '''
                            docker login
                            docker build -t colbyx20/brownbag:1 .
                            docker push colbyx20/brownbag:1
                        '''
                        
                    }
                    
                    // sh 'docker login -u colbyx20@gmail.com -p Soulswitch12@'
                    // sh 'docker build -t colbyx20/brownbag:1 .'
                    
                }
            }
        }
    }

    // post {
    //     always {
    //         cleanWs()  // Clean workspace after each run
    //     }
    // }
}
