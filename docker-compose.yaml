version: '3.8'

services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - dev-network
    environment:
      - JENKINS_OPTS=--prefix=/jenkins
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: '4g'

  jenkins-docker:
    # image: docker:dind
    image: colbyx20/jenkins-agent:1
    container_name: jenkins-docker
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '2g'
    networks:
      dev-network:
        aliases:
          - docker
    ports:
      - "2376:2376"
    command: >
      --storage-driver overlay2 && \
      curl -sO http://jenkins:8080/jenkins/jnlpJars/agent.jar && \
      java -jar agent.jar -url http://jenkins:8080/jenkins -secret c81d72897dbd0b47dcdbbcda6118274c532c1cac7a9acaea9f75bf634eaffb38 -name agent1 -webSocket -workDir "/home/jenkins/"

  init-jenkins-deploy:
    image: busybox
    container_name: init-jenkins-deploy
    command: sh -c "chmod 777 /var/run/docker.sock"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock

  jenkins-deploy:
      # image: jenkins/inbound-agent:latest
      image: colbyx20/jenkins-inbound:1
      container_name: jenkins-deploy
      privileged: true
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - jenkins-data:/var/jenkins_home
      depends_on:
      - jenkins 
      - init-jenkins-deploy
      environment:
        JENKINS_URL: "http://jenkins:8080/jenkins"
        JENKINS_AGENT_NAME: "agent2"
        JENKINS_SECRET: "c2cf7ebe72f8ca40eb678ea5b66071cbe8fadc216b042900e30ee0dd6f1e3f9d"
      networks:
        dev-network:
          aliases:
            - docker

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    ports:
      - "9000:9000"
    networks:
      - dev-network
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonar
    depends_on:
      - sonarqube-db

  sonarqube-db:
    image: postgres:latest
    container_name: sonarqube-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    networks:
      - dev-network

  selenium:
    image: selenium/standalone-chrome
    container_name: selenium
    ports:
      - "4444:4444"
    networks:
      - dev-network

volumes:
  jenkins_home:
  jenkins-docker-certs:
  jenkins-data:

networks:
  dev-network:
    driver: bridge
